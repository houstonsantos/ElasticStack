# Entrada de dados
input {
    # Conexão com o banco/piramide e schedule da query
    jdbc {
        jdbc_connection_string => "jdbc:postgresql://172.20.0.2:5432/elasticsearch"
        jdbc_user => postgres
        jdbc_password => postgres
        jdbc_driver_library => "/usr/share/logstash/lib/postgresql-9.4-1206-jdbc4.jar"
        jdbc_driver_class => "org.postgresql.Driver"
        use_column_value => true
        tracking_column => "codigo"
        tracking_column_type => "numeric"
        last_run_metadata_path => "/usr/share/logstash/config/querys/.last_update_postgres"
        statement_filepath => "/usr/share/logstash/config/querys/postgres.sql"
        schedule => "* * * * *"
    }
}

# Realiza filtro dos dados
filter {
    # Verificando código de fornecedor
    if [c_fornec] =~ /100|101|102|103/ {
         # Adicionando tag para envio de e-mail
        if [c_fornec] =~ /100|101/ {
            mutate { 
                add_field => { "responsavel" => "Houston Santos" } 
                add_tag => "houston.santos" 
            }
        }
        if [c_fornec] == "102" {
            mutate {
                add_field => { "responsavel" => "Pedro Moura" } 
                add_tag => "houston.santos"
            }
        }
        if [c_fornec] == "103" {
            mutate {
                add_field => { "responsavel" => "Gerson Neto" }
                add_tag => "houston.santos"
            }
        }

        # Envia registro a API do Pipefy
        http {
            verb => "POST"
            url => "https://api.pipefy.com/graphql"
            headers => { 
                "Accept" => "application/json" 
                "Authorization" => "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJ1c2VyIjp7ImlkIjozMDEzMDc5NTgsImVtYWlsIjoiaG91c3Rvbi5zYW50b3NAdmVjdHJhY3MuY29tLmJyIiwiYXBwbGljYXRpb24iOjMwMDEwNzEzNn19.COu8S2Eh8jKOLWlBJrxJ-ddNAexoDT8BBlHGtxQ-cnv5qWuvBR0AjuDNOAHVcCdKpfCUrc5kRDGJIjKx6RcL5A" 
                "Content-Type" => "application/json"
            }
            # Payload para criação de card
            body => '{ "query": "mutation { createCard ( input: { pipe_id: \"301752074\" fields_attributes: [ { field_id: \"o_que_deve_ser_feito\", field_value: \"Avaliação fornecedor %{[r_social]}\" } { field_id: \"estimativa\", field_value: \"1\" } { field_id: \"mais_informa_es\", field_value: \"Realizar avaliação do fornecedor %{[r_social]} para nota de número %{[n_nota]}.\" } ] } ) { card { id title url } } }" }'
        }    
    }
}

# Saída dos dados
output {
    # Enviando para elasticsearch
    elasticsearch {
        hosts => ["http://elastic:9200"]
        index => "postgres"
        document_id => "%{codigo}"
    }

    # Enviando e-mail para gestor
    if [tags] != "" {
        email {
            to => "%{tags}@vectracs.com.br"
            from => "houston.asantos@gmail.com"
            subject => "Avalição Fornecedor - Pipefy"
            body => "Olá %{responsavel}! \n\nVocê tem um novo Card com id: #%{[body][data][createCard][card][id]} no Pipefy para avaliação do fornecedor %{r_social}, para a seguinte nota %{n_nota}. \n\nLink de Acesso: %{[body][data][createCard][card][url]}"
            username => "houston.asantos@gmail.com"
            password => "g:Ci@!HpgAA#kM83"
            address => "smtp.gmail.com"
            use_tls => true
            port => 587
        }
    }
    stdout { codec => rubydebug }
}
