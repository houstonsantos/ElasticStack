# Entrada de dados
input {
    # Conexão com o banco/piramide e schedule da query
    jdbc {
        jdbc_connection_string => "jdbc:oracle:thin:@10.200.1.32:1521/xe"
        jdbc_user => "sys"
        jdbc_password => "admin"
        jdbc_driver_library => "/etc/logstash/conf.d/piramide/ojdbc7-12.1.0.2.jar"
        jdbc_driver_class => "Java::oracle.jdbc.driver.OracleDriver"
        statement_filepath => "/etc/logstash/conf.d/piramide/pipefy"
        schedule => "0 3 * * *"
    }
}

# Realiza filtro dos dados
filter {
    # Verificando código de fornecedor
    if [codigo] == /1515|1541|1522|1365|1385|649|942|948/ {
        # Envia registro a API do Pipefy
        http {
            verb => "POST"
            url => "https://api.pipefy.com/graphql"
            headers => { 
                "Accept" => "application/json" 
                "Authorization" => "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJ1c2VyIjp7ImlkIjozMDEzMDc5NTgsImVtYWlsIjoiaG91c3Rvbi5zYW50b3NAdmVjdHJhY3MuY29tLmJyIiwiYXBwbGljYXRpb24iOjMwMDEwNzEzNn19.COu8S2Eh8jKOLWlBJrxJ-ddNAexoDT8BBlHGtxQ-cnv5qWuvBR0AjuDNOAHVcCdKpfCUrc5kRDGJIjKx6RcL5A" 
                "Content-Type" => "application/json"
            }
            # Payload para criação de card
            body => '{"query": "mutation { createCard ( input: { pipe_id: \"301752074\" fields_attributes: [ { field_id: \"what_needs_to_be_done\", field_value: \"Avaliação Fornecedor\" } { field_id: \"estimate\", field_value: \"1\" } { field_id: \"more_information\", field_value: \"TESTE ELASTIC\" } { field_id: \"type\", field_value: \"305585433\" } ] } ) { card { id title url } } }" }'
        }
    }
}

#
output {
    #
    elasticsearch {
        hosts => ["http://elastic:9200"]
        index => "pipefy"
        codec => "json"
    }
    stdout { codec => rubydebug }
}
