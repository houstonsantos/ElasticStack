# Entrada de dados
input {
    # Conexão com o banco/piramide e schedule da query
    jdbc {
        jdbc_connection_string => "jdbc:oracle:thin:@10.200.1.32:1521/xe"
        jdbc_user => "sys"
        jdbc_password => "admin"
        #jdbc_driver_library => "/etc/logstash/conf.d/piramide/ojdbc7-12.1.0.2.jar"
        jdbc_driver_library => "/usr/share/logstash/lib/ojdbc7-12.1.0.2.jar"
        jdbc_driver_class => "Java::oracle.jdbc.driver.OracleDriver"
        use_column_value => true
        tracking_column => "entrada"
        tracking_column_type => "numeric"
        last_run_metadata_path => "/usr/share/logstash/config/querys/.last_update_pipefy"
        statement_filepath => "/usr/share/logstash/config/querys/pipefy.sql"
        #statement_filepath => "/etc/logstash/conf.d/piramide/pipefy"
        schedule => "* * * * *"
    }
}

# Realiza filtro dos dados
filter {
    # Verificando código de fornecedor
    if [fornecedor] =~ /1515|1541|1522|1365|1385|649|942|948/ {
         # Adicionando tag para envio de e-mail
        if [fornecedor] =~ /1515|1522|1365|1385|649|948/ {
            mutate { 
                add_field => { "responsavel" => "Monielly Silva" } 
                add_tag => "houston.santos" 
            }
        }
        if [fornecedor] == 1541 {
            mutate {
                add_field => { "responsavel" => "Rilda Pontes" } 
                add_tag => "houston.santos"
            }
        }
        #if [fornecedor] == "942" {
        #    mutate {
        #        add_field => { "responsavel" => "Paulo Jaborandy" }
        #        add_tag => "paulo.rodriges"
        #    }
        #}

        # Envia registro a API do Pipefy
        http {
            verb => "POST"
            url => "https://api.pipefy.com/graphql"
            headers => { 
                "Accept" => "application/json" 
                "Authorization" => "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJ1c2VyIjp7ImlkIjozMDEzMDc5NTgsImVtYWlsIjoiaG91c3Rvbi5zYW50b3NAdmVjdHJhY3MuY29tLmJyIiwiYXBwbGljYXRpb24iOjMwMDEwNzEzNn19.COu8S2Eh8jKOLWlBJrxJ-ddNAexoDT8BBlHGtxQ-cnv5qWuvBR0AjuDNOAHVcCdKpfCUrc5kRDGJIjKx6RcL5A" 
                "Content-Type" => "application/json"
            }
            # Payload para criação de card
            body => '{ "query": "mutation { createCard ( input: { pipe_id: \"301752074\" fields_attributes: [ { field_id: \"o_que_deve_ser_feito\", field_value: \"Avaliação fornecedor %{[fantasia]}\" } { field_id: \"estimativa\", field_value: \"1\" } { field_id: \"mais_informa_es\", field_value: \"Realizar avaliação do fornecedor %{[fantasia]} para nota de número %{[nf]}.\" } ] } ) { card { id title url } } }" }'
        }    
    }
}

# Saída dos dados
output {
    # Enviando para elasticsearch
    elasticsearch {
        hosts => ["http://elastic:9200"]
        index => "pipefy"
        document_id => "%{entrada}"
    }

    # Enviando e-mail para gestor
    if [tags] != "" {
        email {
            to => "%{tags}@vectracs.com.br"
            from => "houston.asantos@gmail.com"
            subject => "Avaliação Fornecedor - Pipefy"
            body => "Olá %{responsavel}! \n\nVocê tem um novo Card com id: #%{[body][data][createCard][card][id]} no Pipefy para avaliação do fornecedor %{fantasia}, para a seguinte nota %{nf}. \n\nLink de Acesso: %{[body][data][createCard][card][url]}"
            username => "houston.asantos@gmail.com"
            password => "g:Ci@!HpgAA#kM83"
            address => "smtp.gmail.com"
            use_tls => true
            port => 587
        }
    }
    stdout { codec => rubydebug }
}
