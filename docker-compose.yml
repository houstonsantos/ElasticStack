version: "3.9"

services:
   elasticsearch:
      image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
      labels:
         author: "Houston Santos - houston_santos@hotmail.com" 
      container_name: elasticsearch
      environment:
         - TZ=${TIMEZONE}
         - http.host=0.0.0.0
         - node.name=elastic
         - cluster.name=${CLUSTER_NAME}
         - discovery.type=single-node
         - xpack.security.enabled=false
         - xpack.monitoring.collection.enabled=true
         #- ELASTIC_USER=${ELASTIC_USER}
         - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
         #- KIBANA_PASSWORD=${KIBANA_PASSWORD}
      #healthcheck:
      #   test: curl --cacert /usr/share/elasticsearch/config/certs/http_ca.crt -u ${ELASTIC_USER}:${ELASTIC_PASSWORD} https://localhost:9200
      #   interval: 5s
      #   timeout: 10s
      #   retries: 10
      ulimits:
         memlock:
            soft: -1
            hard: -1
      restart: on-failure
      volumes: 
         - elasticsearch:/usr/share/elasticsearch/data
      ports: 
         - 9200:9200
         - 9300:9300
      networks: 
         - elastic

   logstash:
      image: docker.elastic.co/logstash/logstash:${STACK_VERSION}
      labels: 
         author: "Houston Santos - houston_santos@hotmail.com"
      container_name: logstash
      environment:
         - TZ=${TIMEZONE}
      command: 
         -  bash 
         -  -c 
         -  |
            until echo 2>/dev/null > /dev/tcp/elasticsearch/9200; do echo -e "\033[0;37;46m Host $$(uname -n) aguardando Elasticsearch...\033[0m"; sleep 0.5; done
            /usr/local/bin/docker-entrypoint &
            sleep infinity
      depends_on:
         elasticsearch:
            #condition: service_healthy
            condition: service_started
      restart: on-failure
      volumes:
         - logstash:/usr/share/logstash/data
      #   - ./logstash/lib:/mnt
      #   - ./logstash/pipeline:/usr/share/logstash/pipeline
      #   - ./logstash/config/pipelines.yml:/usr/share/logstash/config/pipelines.yml:ro
         - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      ports:
         - 5044:5044
         - 2055:2055/udp
      networks: 
         - elastic

   kibana: 
      image: docker.elastic.co/kibana/kibana:${STACK_VERSION}
      labels: 
         author: "Houston Santos - houston_santos@hotmail.com"
      container_name: kibana
      environment:
         - TZ=${TIMEZONE}
         - servername=kibana
         - server.hosts=0.0.0.0
         - elasticsearch.url=http://elasticsearch:9200
         - elasticsearch.hosts=http://elasticsearch:9200
         #- elasticsearch.username=kiabana_system
         #- elasticsearch.password=${KIBANA_PASSWORD}
      command: 
         -  bash 
         -  -c 
         -  |
            until echo 2>/dev/null > /dev/tcp/elasticsearch/9200; do echo -e "\033[0;37;45m Host $$(uname -n) aguardando Elasticsearch...\033[0m"; sleep 0.5; done
            /usr/local/bin/kibana-docker &
            sleep infinity
      depends_on: 
         elasticsearch:
            #condition: service_healthy
            condition: service_started
      #healthcheck:
      #   test: curl -s -I http://localhost:5601 | grep -q 'HTTP/1.1 302 Found
      #   interval: 5s
      #   timeout: 10s
      #   retries: 10
      restart: on-failure
      volumes: 
         - kibana:/usr/share/kibana/data
      ports: 
         - 5601:5601
      networks: 
         - elastic

volumes: 
   elasticsearch:
      name: elasticsearch
   kibana:
      name: kibana
   logstash:
      name: logstash

networks: 
   elastic:
      name: elastic
   #databases:
   #   external: true
